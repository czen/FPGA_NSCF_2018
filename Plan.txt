* Задача: классификация участков кода для отображения на ПЛИС

* Поиск гнезд циклов, которые работают с небольшим объемом данных
* Поиск участков программы с характеристиками пригодными для ПЛИС
* как искать:
  * поверхностный анализ циклов   
     - очень узки класс программ
  * анализ потока данных?
  * метрики (простой стат. анализ)
  * симуляция поведения программы, эмуляция выполнения
  * профилирование во время выполнения
  * низкоуровневая эмуляция процессора на программе, сбор данных о работе с памятью и т.п.

* Поиск участков с повторяющимися вычислениями
  * выражения?
  * операторы?

* Статический анализ для оценки пригодности для ПЛИС?

* Быстрая аппроксимация времени выполнения и возможности выполнения на ПЛИС за счет:
   * эмулятора на базе интерпретатора С, который бы подсчитывал время с учетом доступных вычислительных модулей. Интерпретатор должен работать за счет обхода управляющего графа по простым блокам и их выполнения в порядке, допускаемом инф. зависимостями. При этом для выполнения определенных операторов задействуются виртуальные вычислительные модули, количество и тип которых задается заранее.
   * возможности указанного интерпретатора пройти вперед до определенного блока кода (для ускорения). Можно пытаться задействовать LLVM и считать простые блоки в нем, лишь бы получилось сделать fast-forward до нужного блока
   * использования simpoints для хорошей оценки времени работы на эмулируемой архитектуре
   * вероятность того, что проект не поместится на ПЛИС, можно оценить по результатам работы интерпретатора (сколько виртуальных вычислителей было задействовано, сколько можно еще задействовать)
   